The ``2-matrix_divided.py`` module
=============================

Using ``matrix_divided``
---------------------

First import:
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Now use:
>>> matrix = [[1, 2, 3], [4, 5, 6]]

Using the right inputs:

>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Using wrong Matrix input:
>>> matrix = [[1, 2, 3], [4, 5, 6, 7]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix = [1, 3, [4, 5, 6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 3], 4]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 'joe', 3], ['doe', 4, 6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Using wrong div inputs:
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix_divided(matrix, 'joe')
Traceback (most recent call last):
...
TypeError: div must be a number
