The ```7-base_geometry.py``` module
===================================
Using ```BaseGeometry```:
-------------------------
First import:
>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

Now use:
>>> bg = BaseGeometry()

Normal Usage:
>>> bg.integer_validator("my_int", 12)

Passing string as arguments to both parameter:
>>> bg.integer_validator("my_int", "string")
Traceback (most recent call last):
...
TypeError: my_int must be an integer

Passing Integers as argument to second parameter:
>>> bg.integer_validator("my_int", 1.67)
Traceback (most recent call last):
...
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int", 0)
Traceback (most recent call last):
...
ValueError: my_int must be greater than 0

>>> bg.integer_validator("my_int", -2)
Traceback (most recent call last):
...
ValueError: my_int must be greater than 0

>>> bg.integer_validator("my_int", None)
Traceback (most recent call last):
...
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int", [1, 2, 3])
Traceback (most recent call last):
...
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int", {1: 1, 2: 2, 3: 3})
Traceback (most recent call last):
...
TypeError: my_int must be an integer

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented
